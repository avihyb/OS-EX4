// gcc -g -o race race.c -pthread
// valgrind --tool=helgrind ./race > race_condition_report.txt 2>&1
// Explaination of output:
// Thread Announcements:

Two threads (#3 and #4) were created by the main thread at line 19 of race.c.
Possible Data Race:

Read Conflict:
Thread #4 reads 8 bytes at address 0x10C018 (variable accum) in the square function (line 9).
This read conflicts with a previous write by Thread #3 to the same address.

Write Conflict:
Thread #4 writes 8 bytes at address 0x10C018 (variable accum) in the square function (line 9).
This write conflicts with another write by Thread #3 to the same address.

Solution: Using mutexes to protect shared resources.



==60759== Helgrind, a thread error detector
==60759== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==60759== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60759== Command: ./race
==60759== 
==60759== ---Thread-Announcement------------------------------------------
==60759== 
==60759== Thread #4 was created
==60759==    at 0x498D9F3: clone (clone.S:76)
==60759==    by 0x498E8EE: __clone_internal (clone-internal.c:83)
==60759==    by 0x48FC6D8: create_thread (pthread_create.c:295)
==60759==    by 0x48FD1FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==60759==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==60759==    by 0x1092C3: main (race.c:19)
==60759== 
==60759== ---Thread-Announcement------------------------------------------
==60759== 
==60759== Thread #3 was created
==60759==    at 0x498D9F3: clone (clone.S:76)
==60759==    by 0x498E8EE: __clone_internal (clone-internal.c:83)
==60759==    by 0x48FC6D8: create_thread (pthread_create.c:295)
==60759==    by 0x48FD1FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==60759==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==60759==    by 0x1092C3: main (race.c:19)
==60759== 
==60759== ----------------------------------------------------------------
==60759== 
==60759== Possible data race during read of size 8 at 0x10C018 by thread #4
==60759== Locks held: none
==60759==    at 0x10920B: square (race.c:9)
==60759==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==60759==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==60759==    by 0x498DA03: clone (clone.S:100)
==60759== 
==60759== This conflicts with a previous write of size 8 by thread #3
==60759== Locks held: none
==60759==    at 0x109215: square (race.c:9)
==60759==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==60759==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==60759==    by 0x498DA03: clone (clone.S:100)
==60759==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==60759== 
==60759== ----------------------------------------------------------------
==60759== 
==60759== Possible data race during write of size 8 at 0x10C018 by thread #4
==60759== Locks held: none
==60759==    at 0x109215: square (race.c:9)
==60759==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==60759==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==60759==    by 0x498DA03: clone (clone.S:100)
==60759== 
==60759== This conflicts with a previous write of size 8 by thread #3
==60759== Locks held: none
==60759==    at 0x109215: square (race.c:9)
==60759==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==60759==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==60759==    by 0x498DA03: clone (clone.S:100)
==60759==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==60759== 
2870
==60759== 
==60759== Use --history-level=approx or =none to gain increased speed, at
==60759== the cost of reduced accuracy of conflicting-access information
==60759== For lists of detected and suppressed errors, rerun with: -s
==60759== ERROR SUMMARY: 36 errors from 2 contexts (suppressed: 342 from 18)
